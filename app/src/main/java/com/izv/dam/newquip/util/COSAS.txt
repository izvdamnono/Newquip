

FALTA ADAPTADOR_LISTA
FALTA LOS METODOS DE LISTA {InterfaceModelo, InterfacePresentador, InterfaceVista}










    public long getId() {
        return id;
    }

    public String getImage() {
        return image;
    }

    public void setImage(String image) {
        this.image = image;
    }

    public String getVideo() {
        return video;
    }

    public void setVideo(String video) {
        this.video = video;
    }

    public String getAudio() {
        return audio;
    }

    public void setAudio(String audio) {
        this.audio = audio;
    }

    public String getFecha_creacion() {
        return fecha_creacion;
    }

    public void setFecha_creacion(String fecha_creacion) {
        this.fecha_creacion = fecha_creacion;
    }

    public String getFecha_modificacion() {
        return fecha_modificacion;
    }

    public void setFecha_modificacion(String fecha_modificacion) {
        this.fecha_modificacion = fecha_modificacion;
    }

    public static Creator<Nota> getCREATOR() {
        return CREATOR;
    }

    public void setId(long id) {
        this.id = id;
    }

    public void setId(String id) {
        try {
            this.id = Long.parseLong(id);
        } catch (NumberFormatException e) {
            this.id = 0;
        }
    }

    public String getTitulo() {
        return titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    public String getNota() {
        return nota;
    }

    public void setNota(String nota) {
        this.nota = nota;
    }
























     protected Nota(Parcel in) {
            id = in.readLong();
            titulo = in.readString();
            nota = in.readString();
        }

        public static final Creator<Nota> CREATOR = new Creator<Nota>() {
            @Override
            public Nota createFromParcel(Parcel in) {
                return new Nota(in);
            }

            @Override
            public Nota[] newArray(int size) {
                return new Nota[size];
            }
        };







        <android.support.v7.widget.Toolbar
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="?attr/colorPrimary"
                android:theme="?attr/actionBarTheme"
                android:minHeight="?attr/actionBarSize"
                android:id="@+id/toolbar2"
                android:gravity="bottom" >

                <Button
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Departure"
                    android:layout_gravity="left|center_vertical"
                    />

                <Button
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Departure"
                    android:layout_gravity="center|center_vertical"
                    />

                <Button
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:text="Departure"
                    android:layout_gravity="center_vertical|right"
                    />
            </android.support.v7.widget.Toolbar>




            public void abrirCamara(){ File file = new File(Environment.getExternalStorageDirectory(), MEDIA_DIRECTORY); boolean isDirectoryCreated = file.exists(); if(!isDirectoryCreated) isDirectoryCreated = file.mkdirs(); if(isDirectoryCreated){ Long timestamp = System.currentTimeMillis() / 1000; imageName = timestamp.toString() + ".jpg"; nota.setImg(imageName); mPath = Environment.getExternalStorageDirectory() + File.separator + MEDIA_DIRECTORY + File.separator + imageName; File newFile = new File(mPath); Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE); intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(newFile)); startActivityForResult(intent, PHOTO_CODE); } }

            case PHOTO_CODE://camara MediaScannerConnection.scanFile(this, new String[]{mPath}, null, new MediaScannerConnection.OnScanCompletedListener() { @Override public void onScanCompleted(String path, Uri uri) { Log.i("ExternalStorage", "Scanned " + path + ":"); Log.i("ExternalStorage", "-> Uri = " + uri); } }); Bitmap bitmap = BitmapFactory.decodeFile(mPath); img.setImageBitmap(bitmap); break;